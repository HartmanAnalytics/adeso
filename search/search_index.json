{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"A.D.E.S.O. Application for      Decryption, Encryption &amp;      Steganographic Operations   Summary: <p> Steganography   is the practice of concealing information within another message to avoid detection.   Encryption   is the process of converting plaintext into ciphertext, which is unreadable.    This application provides both of these functionalities.  Users can first encrypt their data, via   a password using an AES-128 algorithm in CBC mode. Then, users can hide the encrypted data (ciphertext)   within an image of their choice via steganography.  </p> Key Features: <ul> <li>A web interface is provided to paste large plaintext objects without a terminal buffer limit.</li> <li>All encryption, decryption, encoding and decoding is done in memory.</li> </ul> Tools Used: <ul> <li>Front end: Svelte using SvelteKit </li> <li>API: Python 3.11.1  using Flask 2.3.2 </li> <li>Cryptography: cryptography 41.0.1 </li> <li>Steganography using LSB</li> </ul> Gotchas: <ul> <li>Large ciphertext and images can result in API lag or lockups for steganography.</li> <li>The decode operation is done on the file selected, not the image displayed on the UI.</li> </ul>"},{"location":"encryption/","title":"Encryption","text":"A.D.E.S.O. Application for      Decryption, Encryption &amp;      Steganographic Operations   Encryption Summary <p>The default text in the Encryption text area provides helpful  information regarding the basic functionality,   technical details, and operations of the Encrypt and Decrypt functions.</p> <p>The key features of the encryption endpoint and UI are as follows:  <ul> <li>Expandable text area to paste in and view large plaintext objects.</li> <li>Optional and obfuscated password field to encrypt the plaintext.</li> <li>The text area is updated in place with the plain text and ciphertext     based upon the Encode and Decode operation.  The password is persistent,    so it is easy and fast to perform sequential Encode and Decode operations    for enhanced and multi-layered encryption.</li> <li>All encryption, decryption, encoding and decoding is done in memory;    this greatly increases security by ensuring that the plaintext is never    written to disk, which may be recoverable via forensic analysis.</li> <li>Computational complexity is O(n), where n is the length of the data.</li> <li>The Encryption algorithm uses AES-128 in CBC mode, which is a symmetric-key    algorithm established by NIST. AES is the    first and only publically accessible cipher  approved by the NSA for   top secret information.    </li> </ul> </p> User Interface Default UI:   ![Screenshot](img/EncryptionPage.png)    Plaintext Input:   ![Screenshot](img/EncryptionOperation.png)    Ciphertext Output - Single Encryption:   ![Screenshot](img/EncryptionOutput1.png)    Ciphertext Output - Double Encryption:   ![Screenshot](img/EncryptionOutput2.png)"},{"location":"install/","title":"Install","text":"A.D.E.S.O. Application for      Decryption, Encryption &amp;      Steganographic Operations   Basic Installation &amp; Use: <p>shell</p> <code>$ pip install adeso</code> <code>$ python -m adeso.adeso</code> <code>$ open http://127.0.0.1:5000</code> PyPi Links: <p> <li>PyPi Production</li> <li>PyPi Test</li>"},{"location":"steganography/","title":"Steganography","text":"A.D.E.S.O. Application for      Decryption, Encryption &amp;      Steganographic Operations   Steganography Summary <p>The default text in the steganography text area provides helpful  information regarding the basic functionality,   technical details, and operations of the Encode and Decode functions.</p> <p>The key features of the steganography endpoint and UI are as follows:  <ul> <li>Expandable text area to paste in and view large ciphertext objects.</li> <li>File upload for encoded and un-encoded messages for encode and decode operations.</li> <li>The encoded image is displayed on the screen in the Encoded Image section.    The encoded image is not persisted by default for security reasons.  It's up to    you to persist the image if you'd like, where you like.  Simply right click on    the image and save it in your desired location.</li> <li>The decode operation works on the file chosen, not the encoded image displayed    on screen.  So, importantly, if you'd like to decode your encoded image to verify that    the operation worked, you must first save it, then re-select it via the Choose File button.</li> <li>The data decoded from the image is displayed in the Decoded Text text area.  Importantly,    the operation may take some time based upon the size of the image, and the size of the ciphertext.    There is no \"processing\" message, so you'll need to be patient.  You can inspect the page to see    if there is an error if you suspect the operation is taking too long.  If there is an API error,    you can stop the program and re-start it.   </li> </ul> </p> User Interface Default UI:   ![Screenshot](img/SteaganographyPage.png)    Ciphertext Input:   ![Screenshot](img/SteganographyOperation.png)    Encoded Image Output   ![Screenshot](img/SteganographyOutput.png)    Decoded Ciphertext Output   ![Screenshot](img/SteganographyDecoded.png)"}]}